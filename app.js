const express = require("express")
const cors = require("cors")
const config = require("./config/config")
const trafficRoutes = require("./routes/trafficRoutes")
const vehicleRoutes = require("./routes/vehicleRoutes")
const intersectionRoutes = require("./routes/intersectionRoutes")
const sensorRoutes = require("./routes/sensorRoutes")
const alertRoutes = require("./routes/alertRoutes")
const dataReceiverRoutes = require("./routes/dataReceiverRoutes")
const historicalRoutes = require("./routes/historicalRoutes")
const riskRoutes = require("./routes/riskRoutes")
const coordinationRoutes = require("./routes/coordinationRoutes")

const app = express()

// Middleware
app.use(cors())
app.use(express.json())

// Routes for API endpoints
app.use("/api/traffic", trafficRoutes)
app.use("/api/vehicles", vehicleRoutes)
app.use("/api/intersections", intersectionRoutes)
app.use("/api/sensors", sensorRoutes)
app.use("/api/alerts", alertRoutes)
app.use("/api/historical", historicalRoutes)
app.use("/api/risk", riskRoutes)
app.use("/api/coordination", coordinationRoutes)

// Routes for receiving data from Kafka consumers
app.use("/api/receive", dataReceiverRoutes)

// Start server
const startServer = async () => {
  app.listen(config.PORT, () => {
    console.log(`Traffic API running on http://localhost:${config.PORT}`)
    console.log("üöÄ ENHANCED TRAFFIC MONITORING API - v2.0")
    console.log("=" * 50)
    console.log("\nüìä Core Data Endpoints:")
    console.log("- GET /api/traffic - Traffic data with enhanced fields")
    console.log("- GET /api/traffic/stream - Real-time traffic stream")
    console.log("- GET /api/vehicles - Vehicle records with enhanced filtering (intersection_id, sensor_direction, weather_condition)")
    console.log("- GET /api/vehicles/stats - Enhanced vehicle statistics with intersection coordination and weather correlation")
    console.log("- GET /api/vehicles/intersection/:id - Intersection-specific vehicle analytics with 4-sensor breakdown")
    console.log("- GET /api/vehicles/intersection/:id/diagnostics - Diagnostic information for intersection vehicle data availability")
    console.log("- GET /api/vehicles/specifications - Enhanced vehicle length specifications and status decoding")
    console.log("- GET /api/vehicles/stream - Real-time vehicle stream with intersection filtering")
    console.log("- GET /api/intersections - Intersection data with coordination")
    console.log("- GET /api/intersections/stream - Real-time intersection data stream")
    console.log("- GET /api/sensors/health - Sensor health data")
    console.log("- GET /api/sensors/stream - Real-time sensor health stream")
    console.log("- GET /api/alerts - Traffic alerts")
    console.log("- GET /api/alerts/stream - Real-time traffic alerts stream")
    console.log("- GET /api/alerts/stats - Alert statistics and analytics")
    console.log("- GET /api/alerts/count - Alert count with filtering")
    console.log("- GET /api/alerts/debug - Alert collection diagnostics")
    
    console.log("\nüéØ Enhanced Intersection Coordination:")
    console.log("- GET /api/intersections/:id/coordination - Real-time coordination status")
    console.log("- GET /api/intersections/:id/weather-sync - Weather synchronization data")
    console.log("- GET /api/intersections/:id/efficiency - Traffic light efficiency metrics")
    console.log("- GET /api/intersections/:id/sensors - 4-sensor overview")
    
    console.log("\nüîó NEW: Dedicated Coordination Routes:")
    console.log("- GET /api/coordination/intersections - All intersections coordination overview")
    console.log("- GET /api/coordination/intersections/:id/status - Comprehensive coordination status")
    console.log("- GET /api/coordination/intersections/:id/weather-sync - Weather synchronization analysis")
    console.log("- GET /api/coordination/intersections/:id/lights - Traffic light coordination data")
    console.log("- GET /api/coordination/intersections/:id/flow - Flow tracking with granular time buckets")
    console.log("- GET /api/coordination/stream - Real-time coordination updates stream")
    console.log("- GET /api/coordination/intersections/:id/stream - Intersection-specific coordination stream")
    console.log("- GET /api/coordination/diagnostics - System coordination health diagnostics")
    
    console.log("\nüì° Sensor Registry & Management:")
    console.log("- GET /api/sensors/registry - All registered sensors")
    console.log("- GET /api/sensors/map - Geo-spatial sensor map")
    console.log("- GET /api/sensors/:id/capabilities - Sensor feature detection")
    console.log("- GET /api/sensors/intersection/:id - Sensors by intersection")
    
    console.log("\nüìà Historical Analytics:")
    console.log("- GET /api/historical/traffic - Historical traffic density vs speed")
    console.log("- GET /api/historical/incidents - Historical incident frequency")
    console.log("- GET /api/historical/congestion - Congestion heatmap data")
    console.log("- GET /api/historical/weather - Weather distribution")
    console.log("- GET /api/historical/data - Advanced historical data table")
    console.log("- GET /api/historical/average - Average historical metrics")
    
    console.log("\n‚ö†Ô∏è Risk Analysis:")
    console.log("- GET /api/risk/analysis - Risk analysis")
    console.log("- GET /api/risk/heatmap - Risk heatmap")
    console.log("- GET /api/risk/timeline - Risk timeline")
    console.log("- GET /api/risk/factors - Risk factor breakdown")
    console.log("- GET /api/risk/incidents - Incident log")
    
    console.log("\nüì• Data Receiver Endpoints (for Kafka consumers):")
    console.log("- POST /api/receive/traffic - Receive traffic data")
    console.log("- POST /api/receive/vehicle - Receive vehicle data")
    console.log("- POST /api/receive/intersection - Receive intersection data")
    console.log("- POST /api/receive/sensor - Receive sensor health data")
    console.log("- POST /api/receive/alert - Receive traffic alerts")
    console.log("- POST /api/receive/coordination - Receive coordination summaries")
    
    console.log("\nüéâ Enhanced Features Available:")
    console.log("‚úÖ Collection mapping fixed")
    console.log("‚úÖ Schema migration completed")
    console.log("‚úÖ Historical endpoints restored")
    console.log("‚úÖ Intersection coordination API")
    console.log("‚úÖ Sensor registry and capabilities")
    console.log("‚úÖ Weather synchronization tracking")
    console.log("‚úÖ Traffic light efficiency monitoring")
    console.log("‚úÖ Enhanced field support")
    console.log("‚úÖ Dedicated coordination routes with streaming")
    console.log("‚úÖ Real-time coordination diagnostics")
    console.log("‚úÖ Enhanced vehicle analytics with Rust simulator integration")
    console.log("‚úÖ Intersection-specific vehicle tracking and streaming")
    console.log("‚úÖ Weather correlation analysis for vehicle behavior")
    console.log("=" * 50)
  })
}

module.exports = { app, startServer }

